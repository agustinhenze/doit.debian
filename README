================
README
================


doit - automation tool
======================

doit comes from the idea of bringing the power of build-tools to
execute any kind of task


Project Details
===============

 - Source code & Project management on bitbucket - https://bitbucket.org/schettino72/doit
 - Website & docs - http://pydoit.org
 - Discussion group - https://groups.google.com/forum/#!forum/python-doit
 - Official github mirror at - https://github.com/schettino72/doit

license
=======

The MIT License
Copyright (c) 2008-2013 Eduardo Naufel Schettino

see LICENSE file


developers / contributors
==========================

see AUTHORS file


install
=======

doit is tested on python 2.6, 2.7, 3.2, 3.3.

 $ python setup.py install


dependencies
=============

- six
- pyinotify (linux)
- macfsevents (mac)

Tools required for development:

- merucrial * VCS
- py.test * unit-tests
- mock * unit-tests
- coverage * code coverage
- epydoc * API doc generator
- sphinx * doc tool
- pyflakes * syntax checker


developemnt setup
==================

The best way to setup an environment to develop `doit` itself is to
create a virtualenv...

  doit$ virtualen dev
  (dev)doit$ dev/bin/activate

install `doit` as "editable", and add development dependencies
from `dev_requirements.txt`:

  (dev)doit$ pip install --editable .
  (dev)doit$ pip install --requirement dev_requirements.txt



tests
=======

You can use the standalone script:

  $ python runtests.py

or use py.test - http://pytest.org

  $ py.test



documentation
=============

`doc` folder contains ReST documentation based on Sphinx.

  doc$ make html

They are the base for creating the website. The only difference is
that the website includes analytics tracking.
To create it (after installing doit):

 $ doit website

The website will also includes epydoc generated API documentation.


continuous integration
==========================

travis - https://travis-ci.org/schettino72/doit
